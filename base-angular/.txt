ANGULAR::

npm install --g @angular/cli
ng new --routing --prefix bbl base-angular
ng serve
npm install bootstrap


ng g m core
    Añadir modulo core en app.module
ng g c cabeza
    Añadir onDestroy como implement, y su metodo (si queremos)
    Inserto un bbl-cabeza en el app.component.html
    En el componente principal SOLO hay llamadas al resto de componentes
ng g c core/pie
    Hay que exportarlo desde core.module para que se pueda encontrar desde app.component
    b4-grid-default dentro de pie.component.html
    creamos un par de variables en pie.component.ts
    Desde html se llama a esas variables con {{variable}}
    metemos cabeza en core(quitamos la llamada desde app.module y emportamos desde core.module)
ng g c core/logo
    podemos llamar a una variable desde un src envolviendolo [src]

ng g c core/menu
    exportamos
ng g m inicio
ng g c inicio/inicio --flat -it -is
    crea componente sin hacer una carpeta y con htlm y css dentro
    app.modules->import
    para hacer routing, desde app-routing.modules añades a-routes
    core.module tiene que importar los routes para poder usarlos
    lazy loading: carga lo indispensable y los lazy cuando sea necesario
ng g m catalogo --routing
ng g c catalogo/catalogo --flat -it -is
    añades lazy path a app.modules con path al modulo hijo y nombre del modulo hijo
    exportas desde modules del hijo el componente fuera
    en el routing del hijo añades a-route-eager

ng g m agenda --routing
ng g c agenda/agenda --flat
ng g c agenda/tareas
      1--Ir a menu y añadirlo
      2.ir a app routing y añadir la ruta lazy
      3.ir a agenda.module y exportar el componente
      4.ir a agenda routing y añadir la ruta eager

SERVICIOS
ng g s servicios/books
desde libros.module: providers [bookService] (clase autogenerada en book.module)
en book.module añades los metodos que quieras usar en tu servicio.
hacer lo de siempre para padres e hijos componentes
en libros-mock.component llamar a BookService desde constructor

ASINCRONIA
se pueden usar callbacks
USAR PROMESAS en la generacion del mock y en



